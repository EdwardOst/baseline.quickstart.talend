{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "PublicSubnet": {
        	"Description": "Public Subnet, leave blank if using NetworkStack",
        	"Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet": {
        	"Description": "Private Subnet, leave blank if using NetworkStack",
        	"Type": "AWS::EC2::Subnet::Id"
        },
		"IsPrivateSubnet": {
            "Description": "Deploy servers to private or public subnet.",
            "Type": "String",
			"Default": "public",
            "AllowedValues": [ "private", "public" ]
		},
        "nexusTemplateUrl": {
            "Type": "String",
            "Description": "Nexus Template URL",
            "Default": "https://s3.amazonaws.com/baseline.quickstart.talend/templates/talend_nexus.template.json"
        },
        "logserverTemplateUrl": {
            "Type": "String",
            "Description": "Logserver Template URL",
            "Default": "https://s3.amazonaws.com/baseline.quickstart.talend/templates/talend_logserver.template.json"
        },
        "tacTemplateUrl": {
            "Type": "String",
            "Description": "TAC Template URL",
            "Default": "https://s3.amazonaws.com/baseline.quickstart.talend/templates/talend_tac.template.json"
        },
        "jobserverTemplateUrl": {
            "Type": "String",
            "Description": "Jobserver Template URL",
            "Default": "https://s3.amazonaws.com/baseline.quickstart.talend/templates/talend_jobserver.template.json"
        },
        "NexusSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "Nexus Security Group"
        },
        "LogserverSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "Logserver Security Group"
        },
        "TacSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "TAC Security Group"
        },
        "JobserverSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "Jobserver Security Group"
        },
        "TacInstanceType": {
            "Description": "TAC EC2 instance type",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "NexusInstanceType": {
            "Description": "Nexus EC2 instance type",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "LogserverInstanceType": {
            "Description": "Logserver EC2 instance type",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "JobserverInstanceType": {
            "Description": "Jobserver EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an EC2 KeyPair to enable SSH access to the TAC instance.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Default": "eost-aws-quickstart"
        },
        "SSHLocation": {
            "Description": " The IP address range that can be used to access the TAC server using SSH.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "71.120.28.163/32",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "TalendLicenseUser": {
            "Description": "The Talend License User is included in the email you received with your eval license.",
            "Type": "String",
            "Default": "eost"
        },
        "TalendLicensePassword": {
            "Description": "The Talend License Password is included in the email you received with your eval license.",
            "Type": "String",
            "NoEcho": "true"
        },
        "TalendLicenseUrl": {
            "Description": "Url to license file received in email.",
            "Type": "String",
            "Default": "https://s3.amazonaws.com/license.quickstart.talend/license"
        },
        "TalendResourceBucket": {
            "Description": "Talend S3 resources bucket.",
            "Type": "String",
            "Default": "repo-quickstart-talend"
        },  
        "TalendResourceBucketRepoPath": {
            "Description": "Path to binary repository in Talend S3 resources bucket.",
            "Type": "String",
            "Default": "/"
        },  
        "TalendResourceBucketAccessKey": {
            "Description": "Access Key for Talend S3 resources bucket.",
            "Type": "String",
            "NoEcho": "true"
        },
        "TalendResourceBucketSecret": {
            "Description": "Secret for Talend S3 resources bucket.",
            "Type": "String",
            "NoEcho": "true"
        },
        "talendTacDbHost": {
            "Description": "TAC database hostname.",
            "Type": "String",
            "Default": "eost-rds-mysql-2.cfcij7o8rjxs.us-east-1.rds.amazonaws.com"
        },
        "talendGitHost": {
            "Description": "Git host.",
            "Type": "String",
            "Default": "github.com"
        },
        "talendGitPort": {
            "Description": "Git port.",
            "Type": "Number",
            "Default": "443",
            "MinValue": "1",
            "MaxValue": "65535"
        },
        "talendGitRepo": {
            "Description": "Git repository.",
            "Type": "String",
            "Default": "EdwardOst/quickstart-repo"
        },
        "talendGitUser": {
            "Description": "Git user.",
            "Type": "String",
            "Default": "EdwardOst"
        },
        "talendGitPassword": {
            "Description": "Git password.",
            "Type": "String",
            "NoEcho": "true"
        },
        "createNexusStack": {
            "Description": "Create Nexus stack.",
            "Type": "String",
			"Default": "true",
            "AllowedValues": [ "true", "false" ]
        },
        "createLogserverStack": {
            "Description": "Create Logserver stack.",
            "Type": "String",
			"Default": "false",
            "AllowedValues": [ "true", "false" ]
        },
        "createTacStack": {
            "Description": "Create TAC stack.",
            "Type": "String",
			"Default": "false",
            "AllowedValues": [ "true", "false" ]
        },
        "createJobserverStack": {
            "Description": "Create Jobserver stack.",
            "Type": "String",
			"Default": "false",
            "AllowedValues": [ "true", "false" ]
        },
        "createNetworkStack": {
            "Description": "Create network stack.",
            "Type": "String",
			"Default": "true",
            "AllowedValues": [ "true", "false" ]
        }
    },
    "Mappings": {
    },
    "Conditions": {
        "CreateNetworkStackCondition": {
            "Fn::Equals": [
                { "Ref": "createNetworkStack" },
                "true"
            ]
        },
        "CreateNexusStackCondition": {
            "Fn::Equals": [
                { "Ref": "createNexusStack" },
                "true"
            ]
        },
        "CreateLogserverStackCondition": {
            "Fn::Equals": [
                { "Ref": "createLogserverStack" },
                "true"
            ]
        },
        "CreateTacStackCondition": {
            "Fn::Equals": [
                { "Ref": "createTacStack" },
                "true"
            ]
        },
        "CreateJobserverStackCondition": {
            "Fn::Equals": [
                { "Ref": "createJobserverStack" },
                "true"
            ]
        }
    },
    "Resources": {
		"NetworkStack": {
			"Type" : "AWS::CloudFormation::Stack",
            "Condition" : "CreateNetworkStackCondition",
			"Properties" : {
				"Parameters" : {
					"SSHLocation": { "Ref": "SSHLocation" }
				},
				"TemplateURL" : { "Ref": "networkTemplateUrl" },
				"TimeoutInMinutes" : "5"
			}
		},
        "ServersStack": {
			"Type" : "AWS::CloudFormation::Stack",
			"DependsOn": [ "NetworkStack" ],
			"Properties" : {
				"TemplateURL" : { "Ref": "nexusTemplateUrl" },
				"TimeoutInMinutes" : "10",
				"Parameters" : {
                    "PublicSubnet": { 
                        "Fn::If": [
                            { "Fn::GetAtt": [ "NetworkStack", "Outputs.publicSubnet" ] },
                            { "Ref": "PublicSubnet"  }
                        ]
                    },
                    "PrivateSubnet": { 
                        "Fn::If": [
                            { "Fn::GetAtt": [ "NetworkStack", "Outputs.privateSubnet" ] },
                            { "Ref": "PrivateSubnet" }
                        ]
                    },
                    "IsPrivateSubnet": { "Ref": "IsPrivateSubnet" },
                    "nexusTemplateUrl": { "Ref": "nexusTemplateUrl" },
                    "logserverTemplateUrl": { "Ref": "logserverTemplateUrl" },
                    "tacTemplateUrl": { "Ref": "tacTemplateUrl" },
                    "jobserverTemplateUrl": { "Ref": "jobserverTemplateUrl" },
                    "NexusSecurityGroup": { "Ref": "NexusSecurityGroup" },
                    "LogserverSecurityGroup": { "Ref": "LogserverSecurityGroup" },
                    "TacSecurityGroup": { "Ref": "TacSecurityGroup" },
                    "JobserverSecurityGroup": { "Ref": "JobserverSecurityGroup" },
                    "NexusInstanceType": { "Ref": "NexusInstanceType" },
                    "LogserverInstanceType": { "Ref": "LogserverInstanceType" },
                    "TacInstanceType": { "Ref": "TacInstanceType" },
                    "JobserverInstanceType": { "Ref": "JobserverInstanceType" },
                    "KeyName": { "Ref": "KeyName" },
                    "SSHLocation": { "Ref": "SSHLocation" },
                    "TalendLicenseUser": { "Ref": "TalendLicenseUser" },
                    "TalendLicensePassword": { "Ref": "TalendLicensePassword" },
                    "TalendLicenseUrl": { "Ref": "TalendLicenseUrl" },
                    "TalendResourceBucket": { "Ref": "TalendResourceBucket" },
                    "TalendResourceBucketRepoPath": { "Ref": "TalendResourceBucketRepoPath" },
                    "TalendResourceBucketAccessKey": { "Ref": "TalendResourceBucketAccessKey" },
                    "TalendResourceBucketSecret": { "Ref": "TalendResourceBucketSecret" },
                    "talendTacDbHost": { "Ref": "talendTacDbHost" },
                    "talendGitHost": { "Ref": "talendGitHost" },
                    "talendGitPort": { "Ref": "talendGitPort" },
                    "talendGitRepo": { "Ref": "talendGitRepo" },
                    "talendGitUser": { "Ref": "talendGitUser" },
                    "talendGitPassword": { "Ref": "talendGitPassword" },
                    "createNexusStack": { "Ref": "createNexusStack" },
                    "createLogserverStack": { "Ref": "createLogserverStack" },
                    "createTacStack": { "Ref": "createTacStack" },
                    "createJobserverStack": { "Ref": "createJobserverStack" }
                }
            }
        }
    },
    "Outputs": {
        "NetworkStack": {
            "Condition": "CreateNetworkStackCondition",
            "Value": { "Ref": "NetworkStack" },
            "Description": "Nested network stack",
			"Export": {
				"Name": {
					"Fn::Join": [ "", [ { "Ref" : "AWS::StackName" }, ":",  "NetworkStack" ] ] 
				} 
			}
        },
        "NexusStack": {
            "Condition": "CreateNexusStackCondition",
            "Value": { "Ref": "NexusStack" },
            "Description": "Nested Nexus stack",
			"Export": {
				"Name": {
					"Fn::Join": [ "", [ { "Ref" : "AWS::StackName" }, ":",  "NexusStack" ] ] 
				} 
			}
        },
        "LogserverStack": {
            "Condition": "CreateLogserverStackCondition",
            "Value": { "Ref": "LogserverStack" },
            "Description": "Nested Logserver stack",
			"Export": {
				"Name": {
					"Fn::Join": [ "", [ { "Ref" : "AWS::StackName" }, ":",  "LogserverStack" ] ] 
				} 
			}
        },
        "TacStack": {
            "Condition": "CreateTacStackCondition",
            "Value": { "Ref": "TacStack" },
            "Description": "Nested TAC stack",
			"Export": {
				"Name": {
					"Fn::Join": [ "", [ { "Ref" : "AWS::StackName" }, ":",  "TacStack" ] ] 
				} 
			}
        },
        "JobserverStack": {
            "Condition": "CreateJobserverStackCondition",
            "Value": { "Ref": "JobserverStack" },
            "Description": "Nested Jobserver stack",
			"Export": {
				"Name": {
					"Fn::Join": [ "", [ { "Ref" : "AWS::StackName" }, ":",  "JobserverStack" ] ] 
				} 
			}
        }
    }
}