{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "QSS3URL": {
            "Description": "Encapsulate variation in s3 root url for commercial or gov-cloud",
            "Type": "String",
            "Default": "https://s3.amazonaws.com",
            "AllowedValues": [ "https://s3.amazonaws.com", "https://s3-us-gov-west-1.amazonaws.com" ]
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "baseline.quickstart.talend",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string.",
            "Default": "",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "nexusTemplate": {
            "Description": "Nexus template relative path and filename",
            "Type": "String",
            "Default": "templates/talend-nexus.template",
            "AllowedValues": [ "templates/talend-nexus.template" ]
        },
        "logserverTemplate": {
            "Description": "Logserver template relative path and filename",
            "Type": "String",
            "Default": "templates/talend-logserver.template",
            "AllowedValues": [ "templates/talend-logserver.template" ]
        },
        "tacTemplate": {
            "Description": "TAC template relative path and filename",
            "Type": "String",
            "Default": "templates/talend-tac.template",
            "AllowedValues": [ "templates/talend-tac.template" ]
        },
        "jobserverTemplate": {
            "Description": "Jobserver template relative path and filename",
            "Type": "String",
            "Default": "templates/talend-jobserver.template",
            "AllowedValues": [ "templates/talend-jobserver.template" ]
        },
        "PublicSubnetId": {
        	"Description": "Public Subnet",
        	"Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnetId": {
        	"Description": "Private Subnet",
        	"Type": "AWS::EC2::Subnet::Id"
        },
		"privateNexus": {
            "Description": "Deploy Nexus to private or public subnet.",
            "Type": "String",
			"Default": "public",
            "AllowedValues": [ "private", "public" ]
		},
		"privateLogserver": {
            "Description": "Deploy Logserver to private or public subnet.",
            "Type": "String",
			"Default": "public",
            "AllowedValues": [ "private", "public" ]
		},
		"privateTac": {
            "Description": "Deploy TAC to private or public subnet.",
            "Type": "String",
			"Default": "public",
            "AllowedValues": [ "private", "public" ]
		},
		"privateJobserver": {
            "Description": "Deploy Jobserver to private or public subnet.",
            "Type": "String",
			"Default": "private",
            "AllowedValues": [ "private", "public" ]
		},
        "NexusSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "Nexus Security Group"
        },
        "LogserverSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "Logserver Security Group"
        },
        "TacSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "TAC Security Group"
        },
        "JobserverSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "Jobserver Security Group"
        },
        "TacInstanceType": {
            "Description": "TAC EC2 instance type",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "NexusInstanceType": {
            "Description": "Nexus EC2 instance type",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "LogserverInstanceType": {
            "Description": "Logserver EC2 instance type",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "JobserverInstanceType": {
            "Description": "Jobserver EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an EC2 KeyPair to enable SSH access to the TAC instance.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Default": "eost-aws-quickstart"
        },
        "SSHLocation": {
            "Description": " The IP address range that can be used to access the TAC server using SSH.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "71.120.28.163/32",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "TalendLicenseUser": {
            "Description": "The Talend License User is included in the email you received with your eval license.",
            "Type": "String",
            "Default": "eost"
        },
        "TalendLicensePassword": {
            "Description": "The Talend License Password is included in the email you received with your eval license.",
            "Type": "String",
            "NoEcho": "true"
        },
        "TalendLicenseUrl": {
            "Description": "Url to license file received in email.",
            "Type": "String",
            "Default": "https://s3.amazonaws.com/license.quickstart.talend/license"
        },
        "TalendResourceBucket": {
            "Description": "Talend S3 resources bucket.",
            "Type": "String",
            "Default": "repo-quickstart-talend"
        },  
        "TalendResourceBucketRepoPath": {
            "Description": "Path to binary repository in Talend S3 resources bucket.",
            "Type": "String",
            "Default": "/"
        },  
        "TalendResourceBucketAccessKey": {
            "Description": "Access Key for Talend S3 resources bucket.",
            "Type": "String",
            "NoEcho": "true"
        },
        "TalendResourceBucketSecret": {
            "Description": "Secret for Talend S3 resources bucket.",
            "Type": "String",
            "NoEcho": "true"
        },
        "talendTacDbHost": {
            "Description": "TAC database hostname.",
            "Type": "String",
            "Default": "eost-rds-mysql-2.cfcij7o8rjxs.us-east-1.rds.amazonaws.com"
        },
        "createTacDatabase": {
            "Description": "Create TAC Database (true) or use an existing TAC database (false)",
            "Type": "String",
            "AllowedValues": [ "true", "false" ],
            "Default": "true"
        },
        "createAmcDatabase": {
            "Description": "Create AMC Database (true) or use an existing AMC database (false)",
            "Type": "String",
            "AllowedValues": [ "true", "false" ],
            "Default": "true"
        },
        "masterDbUser": {
            "Description": "The master or root user used to create TAC and AMC databases and the TAC user.  Only needed if creating the TAC or AMC databases.",
            "Type": "String",
            "Default": ""
        },
        "masterDbPassword": {
            "Description": "Master user database password.  Only needed if creating the TAC or AMC databases.",
            "Type": "String",
            "Default": "",
            "NoEcho": "true"
        },
        "talendGitHost": {
            "Description": "Git host.",
            "Type": "String",
            "Default": "github.com"
        },
        "talendGitPort": {
            "Description": "Git port.",
            "Type": "Number",
            "Default": "443",
            "MinValue": "1",
            "MaxValue": "65535"
        },
        "talendGitRepo": {
            "Description": "Git repository.",
            "Type": "String",
            "Default": "EdwardOst/quickstart-repo"
        },
        "talendGitUser": {
            "Description": "Git user.",
            "Type": "String",
            "Default": "EdwardOst"
        },
        "talendGitPassword": {
            "Description": "Git password.",
            "Type": "String",
            "NoEcho": "true"
        },
        "createNexusStack": {
            "Description": "Create Nexus stack.",
            "Type": "String",
			"Default": "true",
            "AllowedValues": [ "true", "false" ]
        },
        "createLogserverStack": {
            "Description": "Create Logserver stack.",
            "Type": "String",
			"Default": "true",
            "AllowedValues": [ "true", "false" ]
        },
        "createTacStack": {
            "Description": "Create TAC stack.",
            "Type": "String",
			"Default": "true",
            "AllowedValues": [ "true", "false" ]
        },
        "createJobserverStack": {
            "Description": "Create Jobserver stack.",
            "Type": "String",
			"Default": "true",
            "AllowedValues": [ "true", "false" ]
        }
    },
    "Mappings": {
    },
    "Conditions": {
        "CreateNexusStackCondition": {
            "Fn::Equals": [
                { "Ref": "createNexusStack" },
                "true"
            ]
        },
        "CreateLogserverStackCondition": {
            "Fn::Equals": [
                { "Ref": "createLogserverStack" },
                "true"
            ]
        },
        "CreateTacStackCondition": {
            "Fn::Equals": [
                { "Ref": "createTacStack" },
                "true"
            ]
        },
        "CreateJobserverStackCondition": {
            "Fn::Equals": [
                { "Ref": "createJobserverStack" },
                "true"
            ]
        },
        "isNexusPrivate": {
            "Fn::Equals": [
                { "Ref": "privateNexus" },
                "private"
            ]
        },
        "isLogserverPrivate": {
            "Fn::Equals": [
                { "Ref": "privateLogserver" },
                "private"
            ]
        },
        "isTacPrivate": {
            "Fn::Equals": [
                { "Ref": "privateTac" },
                "private"
            ]
        },
        "isJobserverPrivate": {
            "Fn::Equals": [
                { "Ref": "privateJobserver" },
                "private"
            ]
        }
    },
    "Resources": {
		"NexusStack": {
			"Type" : "AWS::CloudFormation::Stack",
            "Condition" : "CreateNexusStackCondition",
			"Properties" : {
                "TemplateURL": { "Fn::Sub": "${QSS3URL}/${QSS3BucketName}/${QSS3KeyPrefix}${nexusTemplate}" },
				"Parameters" : {
					"InstanceType": { "Ref": "NexusInstanceType" },
					"KeyName": { "Ref": "KeyName" },
					"SubnetId": { "Fn::If": [ "isNexusPrivate", { "Ref": "PrivateSubnetId" }, { "Ref": "PublicSubnetId" } ] },
                    "privateSubnet": { "Ref": "privateNexus" },
					"SecurityGroupIds": { "Ref": "NexusSecurityGroup" },
					"TalendProfile": "nexus",
					"TalendProfileInstanceId": "1",
					"TalendLicenseUser": { "Ref": "TalendLicenseUser" },
					"TalendLicensePassword": { "Ref": "TalendLicensePassword" },
					"TalendLicenseUrl":  { "Ref": "TalendLicenseUrl" },
                    "TalendResourceBucket": { "Ref": "TalendResourceBucket" },
                    "TalendResourceBucketRepoPath": { "Ref": "TalendResourceBucketRepoPath" },
                    "TalendResourceBucketAccessKey": { "Ref": "TalendResourceBucketAccessKey" },
                    "TalendResourceBucketSecret": { "Ref": "TalendResourceBucketSecret" }
				},
				"TimeoutInMinutes" : "10"
			}
		},
		"LogserverStack": {
			"Type" : "AWS::CloudFormation::Stack",
            "Condition" : "CreateLogserverStackCondition",
			"Properties" : {
                "TemplateURL": { "Fn::Sub": "${QSS3URL}/${QSS3BucketName}/${QSS3KeyPrefix}${logserverTemplate}" },
				"Parameters" : {
					"InstanceType": { "Ref": "LogserverInstanceType" },
					"KeyName": { "Ref": "KeyName" },
					"SubnetId": { "Fn::If": [ "isLogserverPrivate", { "Ref": "PrivateSubnetId" }, { "Ref": "PublicSubnetId" } ] },
                    "privateSubnet": { "Ref": "privateLogserver" },
					"SecurityGroupIds": { "Ref": "LogserverSecurityGroup" },
					"TalendProfile": "logserver",
					"TalendProfileInstanceId": "1",
					"TalendLicenseUser": { "Ref": "TalendLicenseUser" },
					"TalendLicensePassword": { "Ref": "TalendLicensePassword" },
					"TalendLicenseUrl":  { "Ref": "TalendLicenseUrl" },
                    "TalendResourceBucket": { "Ref": "TalendResourceBucket" },
                    "TalendResourceBucketRepoPath": { "Ref": "TalendResourceBucketRepoPath" },
                    "TalendResourceBucketAccessKey": { "Ref": "TalendResourceBucketAccessKey" },
                    "TalendResourceBucketSecret": { "Ref": "TalendResourceBucketSecret" }
				},
				"TimeoutInMinutes" : "10"
			}
		},
		"TacStack": {
			"Type" : "AWS::CloudFormation::Stack",
            "Condition" : "CreateTacStackCondition",
			"DependsOn": [ "NexusStack", "LogserverStack" ],
			"Properties" : {
                "TemplateURL": { "Fn::Sub": "${QSS3URL}/${QSS3BucketName}/${QSS3KeyPrefix}${tacTemplate}" },
				"Parameters" : {
					"InstanceType": { "Ref": "TacInstanceType" },
					"KeyName": { "Ref": "KeyName" },
					"SubnetId": { "Fn::If": [ "isTacPrivate", { "Ref": "PrivateSubnetId" }, { "Ref": "PublicSubnetId" } ] },
                    "privateSubnet": { "Ref": "privateTac" },
					"SecurityGroupIds": { "Ref": "TacSecurityGroup" },
					"TalendProfile": "tacamc",
					"TalendProfileInstanceId": "1",
					"TalendLicenseUser": { "Ref": "TalendLicenseUser" },
					"TalendLicensePassword": { "Ref": "TalendLicensePassword" },
					"TalendLicenseUrl":  { "Ref": "TalendLicenseUrl" },
                    "TalendResourceBucket": { "Ref": "TalendResourceBucket" },
                    "TalendResourceBucketRepoPath": { "Ref": "TalendResourceBucketRepoPath" },
                    "TalendResourceBucketAccessKey": { "Ref": "TalendResourceBucketAccessKey" },
                    "TalendResourceBucketSecret": { "Ref": "TalendResourceBucketSecret" },
                    "tacDbHost": { "Ref": "talendTacDbHost" },
                    "masterDbUser": { "Ref": "masterDbUser" },
                    "masterDbPassword": { "Ref": "masterDbPassword" },
                    "createTacDatabase": { "Ref": "createTacDatabase" },
                    "createAmcDatabase": { "Ref": "createAmcDatabase" },
                    "talendNexusHost": { "Fn::GetAtt": [ "NexusStack", "Outputs.privateDnsName" ] },
                    "talendNexusPort": { "Fn::GetAtt": [ "NexusStack", "Outputs.nexusPort" ] },
                    "talendLoggingHost": { 
                        "Fn::If": [ 
                            "isLogserverPrivate",
                            { "Fn::GetAtt": [ "LogserverStack", "Outputs.privateDnsName" ] },
                            { "Fn::GetAtt": [ "LogserverStack", "Outputs.publicDnsName" ] }
                        ] 
                    },
                    "talendLogstashTacPort": { "Fn::GetAtt": [ "LogserverStack", "Outputs.logstashTacPort" ] },
                    "talendLogstashKibanaPort": { "Fn::GetAtt": [ "LogserverStack", "Outputs.logstashKibanaPort" ] },
                    "talendGitHost": { "Ref": "talendGitHost" },
                    "talendGitPort": { "Ref": "talendGitPort" },
                    "talendGitRepo": { "Ref": "talendGitRepo" },
                    "talendGitUser": { "Ref": "talendGitUser" },
                    "talendGitPassword": { "Ref": "talendGitPassword" }
				},
				"TimeoutInMinutes" : "10"
			}
		},
		"JobserverStack": {
			"Type" : "AWS::CloudFormation::Stack",
            "Condition" : "CreateJobserverStackCondition",
			"DependsOn": [ "TacStack", "LogserverStack" ],
			"Properties" : {
                "TemplateURL": { "Fn::Sub": "${QSS3URL}/${QSS3BucketName}/${QSS3KeyPrefix}${jobserverTemplate}" },
				"Parameters" : {
					"InstanceType": { "Ref": "JobserverInstanceType" },
					"KeyName": { "Ref": "KeyName" },
					"SubnetId": { "Fn::If": [ "isJobserverPrivate", { "Ref": "PrivateSubnetId" }, { "Ref": "PublicSubnetId" } ] },
                    "privateSubnet": { "Ref": "privateJobserver" },
					"SecurityGroupIds": { "Ref": "JobserverSecurityGroup" },
					"TalendProfile": "jobserver",
					"TalendProfileInstanceId": "1",
					"TalendLicenseUser": { "Ref": "TalendLicenseUser" },
					"TalendLicensePassword": { "Ref": "TalendLicensePassword" },
					"TalendLicenseUrl":  { "Ref": "TalendLicenseUrl" },
                    "TalendResourceBucketAccessKey": { "Ref": "TalendResourceBucketAccessKey" },
                    "TalendResourceBucketSecret": { "Ref": "TalendResourceBucketSecret" },
					"tacHost": { "Fn::GetAtt": [ "TacStack", "Outputs.privateDnsName" ] },
                    "talendLoggingHost": { "Fn::GetAtt": [ "LogserverStack", "Outputs.privateDnsName" ] },
                    "talendLogstashJobserverPort": { "Fn::GetAtt": [ "LogserverStack", "Outputs.logstashJobserverPort" ] }
				},
				"TimeoutInMinutes" : "10"
			}
		}
    },
    "Outputs": {
        "NexusStack": {
            "Condition": "CreateNexusStackCondition",
            "Value": { "Ref": "NexusStack" },
            "Description": "Nested Nexus stack",
			"Export": {
				"Name": {
					"Fn::Join": [ "", [ { "Ref" : "AWS::StackName" }, ":",  "NexusStack" ] ] 
				} 
			}
        },
        "LogserverStack": {
            "Condition": "CreateLogserverStackCondition",
            "Value": { "Ref": "LogserverStack" },
            "Description": "Nested Logserver stack",
			"Export": {
				"Name": {
					"Fn::Join": [ "", [ { "Ref" : "AWS::StackName" }, ":",  "LogserverStack" ] ] 
				} 
			}
        },
        "TacStack": {
            "Condition": "CreateTacStackCondition",
            "Value": { "Ref": "TacStack" },
            "Description": "Nested TAC stack",
			"Export": {
				"Name": {
					"Fn::Join": [ "", [ { "Ref" : "AWS::StackName" }, ":",  "TacStack" ] ] 
				} 
			}
        },
        "JobserverStack": {
            "Condition": "CreateJobserverStackCondition",
            "Value": { "Ref": "JobserverStack" },
            "Description": "Nested Jobserver stack",
			"Export": {
				"Name": {
					"Fn::Join": [ "", [ { "Ref" : "AWS::StackName" }, ":",  "JobserverStack" ] ] 
				} 
			}
        }
    }
}